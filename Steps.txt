1. Using docker image Create a docker container =>
   docker container run --name postgresdb -e POSTGRES_PASSWORD=postgres -d -p 5432:5432 postgres
   docker container ls

//2. Implement sql file then run this command =>
   docker cp expensetracker_db.sql postgresdb:/
   docker container exec -it postgresdb bash
   psql -U postgres --file expensetracker_db.sql
   exit

3. update application.properties to set up connection and check it
4. Create RestController and test it.
5. Create model, service, exception packages with interfaces
6. Create UserRepository, UserRepository, UserRepoImpl and UserServImpl classes
7. Some implementations need to be done in UserRepositoryImpl.
8. Updating UserRestController.

//9. Just to check: docker container exec -it postgresdb psql -U postgres
                  \connect expensetrackerdb;
                  select * from et_users;	
              
10. Adding login functionality and hashing the password
11. Adding JWT authentication
12. Implementing Category, CategoryService and Exception classes
13. Implementing CategoryRepo interface, CatRepoImpl and CatServiceImpl class
14. Updating CategoryRestController, exposing endpoint for creating a category
15. Category - Find & Update Functionality
16. Adding Category Transactions (creating Transaction model, Interface for Service and Repository,
      Implementation classes for both Service and Repository).
17. Implementing RestController (POST request is tested in addTransaction)
